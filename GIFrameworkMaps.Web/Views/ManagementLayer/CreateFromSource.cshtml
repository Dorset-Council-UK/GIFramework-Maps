@model GIFrameworkMaps.Data.Models.ViewModels.Management.LayerEditModel;
@using System.Text.Json;
@{
    ViewData["Title"] = $"Create new layer";
    //TODO Temporary hack using url.content to generate correct link
    var proxyEndpoint = Url.Content("~/proxy");
}

<h1>@ViewData["Title"]</h1>

<div>
    <a href="https://dorset-council-uk.github.io/GIFramework-Maps-Admin-Guide/gui/layers/" class="btn btn-outline-primary" target="_blank"
       role="button">Stuck? Read the help documentation</a>
</div>

<form asp-action="CreateFromSource">
    <div class="row mt-2">
    
        <div class="col-md-8 col-lg-6">
        
            <input type="hidden" asp-for="Layer.LayerSourceId"/>
            <partial name="ManagementPartials/EditLayerPartial" model="Model" />

            <div class="mb-3">
                <input type="submit" value="Create" class="btn btn-primary btn-lg" />
                <a asp-action="List" class="btn btn-link">Cancel</a>
            </div>

        </div>
        <div class="col-md-4 col-lg-6">

            <ul class="nav nav-underline mb-2" role="tablist">
                <li class="nav-item active" role="presentation">
                    <button class="nav-link active" id="categories-tab" data-bs-toggle="tab" data-bs-target="#categories-tab-pane" type="button" role="tab" aria-controls="categories-tab-pane" aria-selected="true">Layer Categories</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="details-tab" data-bs-toggle="tab" data-bs-target="#details-tab-pane" type="button" role="tab" aria-controls="details-tab-pane" aria-selected="false">Source details</button>
                </li>
            </ul>

            <div class="tab-content">
                <div class="tab-pane fade show active" id="categories-tab-pane" role="tabpanel" aria-labelledby="categories-tab" tabindex="0">
                    <partial name="ManagementPartials/VersionCategoryList" model="Model.AvailableCategories.Where(c => c.ParentCategoryId == null).ToList()" view-data="ViewData" />
                </div>
                <div class="tab-pane fade" id="details-tab-pane" role="tabpanel" aria-labelledby="details-tab" tabindex="0">
                    <table class="table table-sm table-striped">
                        <tbody>
                            <tr><th>ID</th><td>@Model.Layer.LayerSource.Id</td></tr>
                            <tr><th>Name</th><td>@Model.Layer.LayerSource.Name</td></tr>
                            <tr><th>Description</th><td>@Model.Layer.LayerSource.Description</td></tr>
                        </tbody>
                    </table>
                    <a class="btn btn-outline-secondary btn-sm" href="@Url.Action("Edit","ManagementLayerSource",new {id=Model.Layer.LayerSource.Id})" target="_blank">View source details <i class="bi bi-box-arrow-up-right"></i></a>
                </div>
            </div>

        
        </div>
    
    </div>
</form>
@{
    //TODO - move this to a more generic area and return as part of viewmodel
    var name = "";
    var baseUrl = "";
    if(Model.Layer.LayerSource.LayerSourceType.Name != "XYZ"){
        var paramsOpt = Model.Layer.LayerSource.LayerSourceOptions.Where(o => o.Name == "params").FirstOrDefault().Value;
        var values = JsonSerializer.Deserialize<Dictionary<string, string>>(paramsOpt);
        name = values.Where(v => v.Key.ToLower() == "layers").FirstOrDefault().Value;
        baseUrl = Model.Layer.LayerSource.LayerSourceOptions.Where(o => o.Name == "url").FirstOrDefault().Value;
    }
}
<input type="hidden" value="@name" id="layer-source-name" />
<input type="hidden" value="@baseUrl" id="layer-source-url" />


<template id="template-helper-button-list-item">
    <li class="list-inline-item">
        <button type="button" class="btn btn-sm btn-outline-primary mb-2"></button>
    </li>
</template>

@section Styles{
    <style type="text/css">
        .template-preview {
            max-height: 500px;
            max-width: 400px;
            overflow-y: auto;
        }

        .template-preview p, .template-preview a {
            font-size: 0.9rem;
            margin-bottom: 0;
        }

        .template-preview ul {
            margin-bottom: .5rem;
        }

        .template-preview h1 {
            font-size: 1.5em;
        }

        .template-preview h2 {
            font-size: 1.2rem;
        }

        .template-preview h3 {
            font-size: 1.1rem;
        }

        .template-preview h4 {
            font-size: 1.1rem;
        }

        .template-preview h5 {
            font-size: 1rem;
        }

        .template-preview .gifw-result-list ul li {
            padding-bottom: 5px;
            border-bottom: thin solid #dfdfdf;
        }
    </style>
}
<script>
    var proxyEndpoint = '@proxyEndpoint';
</script>
@section Scripts{
    <script>
        
        document.addEventListener("DOMContentLoaded", (event) => {
            const ev = new Event("CreateLayerFromSourceInit")
            document.dispatchEvent(ev);
        });
    </script>
}